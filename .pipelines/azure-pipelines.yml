trigger:
 - 'main'
pr:
 - 'main'
stages:
- stage: PR_Build
  displayName: PR Build
  condition: in(variables['Build.Reason'], 'PullRequest', 'Schedule')
  jobs:
    - job: PR_Build
      displayName: PR Build
      steps:
        - template: 'steps/pr.yml'
          parameters:
            configuration: Debug
            solutionPath: Fenix.sln

- stage: CI_Build
  displayName: CI Build
  condition: in(variables['Build.Reason'], 'Manual', 'IndividualCI', 'BatchedCI')
  jobs:
    - job: CI_Build
      displayName: CI Build
      steps:
        - template: 'steps/ci.yml'
          parameters:
            configuration: Release
            projects: [ 'Fenix.Bot' ]
            containerNames: [ 'Fenix.Worker.DiscordListener' ]

- stage: Release_ACR
  displayName: 'ACR'
  dependsOn: CI_Build
  condition: and(eq(dependencies.CI_Build.result, 'Succeeded'), ne(variables['Build.SourceBranch'], 'refs/heads/main'))
  pool:
    vmImage: 'ubuntu-18.04'
  jobs:
    - template: jobs/acr.yml
      parameters:
        containerNames: [ 'Fenix.Worker.DiscordListener' ]
        containerRegistry: 'fenixpipelineacr'
        environment: fenix-dev-usw

- stage: Dev_Release_USW
  displayName: '[Dev] USW'
  dependsOn: Release_ACR
  condition: and(eq(dependencies.CI_Build.result, 'Succeeded'), ne(variables['Build.SourceBranch'], 'refs/heads/main'))
  pool:
    vmImage: 'windows-2019'
  jobs:
    - deployment: Dev_Release_USW
      displayName: '[Dev] USW'
      environment: 'fenix-dev-usw'
      variables:
        - group: fenixpipeline
      strategy:
        runOnce:
          deploy:
            steps:
              - template: 'steps/deploy.yml'
                parameters:
                  functionAppName: 'fenix-dev-usw'
                  armDeploymentSubscription: 'VSE-150'
                  armDeploymentResourceGroup: 'fenix-dev-usw'
                  armDeploymentLocation: 'West US'
                  armDeploymentParametersFileName: 'dev-usw-parameters'